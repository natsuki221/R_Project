demo()
install.packages("geojasonio")
install.packages("ggplot2")
#  注意 !  配合台北市網站開放資料的GeoJson 格式變更，請改用2_1_v01.R 或 2_1_v021.R
####### 繪製台北市界地圖解法一###################
library(geojsonio)  # 載入處理GeoJSON資料套件
####### 繪製台北市界地圖解法一###################
library(tibble)
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
print(geojson.sp@data[c('COUNTYSN','COUNTYNAME')]) # 列印縣市代碼對照
twn.map <- tidy( # 將sp物件轉換為data.frame物件
sp.taipei,  # 資料對象
region = "COUNTYSN" # 群(group)欄位的依據
)
g <- ggplot(  # 使用繪圖函式產生繪圖物件
data=twn.map,  # 符合data.frame格式的繪圖資料
mapping=aes(   # 指定data 的欄位
x = long,  # x軸為經度
y = lat    # y軸為緯度
)) +
labs(title='台北市縣界地圖(解方一)')+
geom_path(show.legend=FALSE)  # 繪出座標路徑線
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
####### 繪製台北市界地圖解法一###################
library(tibble)
library(geojsonio)  # 載入處理GeoJSON資料套件
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
print(geojson.sp@data[c('COUNTYSN','COUNTYNAME')]) # 列印縣市代碼對照
sp.taipei <- geojson.sp[  # 過濾geojson.sp(SpatialPolygonsDataFrame 物件) 的臺北市資料
geojson.sp@data$COUNTYNAME  %in% c('台北市'),
]
library(broom) # 載入轉換tibble(data.frame 的擴充物件)資料套件
twn.map <- tidy( # 將sp物件轉換為data.frame物件
sp.taipei,  # 資料對象
region = "COUNTYSN" # 群(group)欄位的依據
)
library(ggplot2) # 載入繪圖套件
g <- ggplot(  # 使用繪圖函式產生繪圖物件
data=twn.map,  # 符合data.frame格式的繪圖資料
mapping=aes(   # 指定data 的欄位
x = long,  # x軸為經度
y = lat    # y軸為緯度
)) +
labs(title='台北市縣界地圖(解方一)')+
geom_path(show.legend=FALSE)  # 繪出座標路徑線
print(g) # 印出台北縣市界地圖
####### 繪製台北市界地圖解法二###################
library(rgdal) # 載入rgdal套件讀取shp地圖資料
twn.shp <- rgdal::readOGR( # 回傳Spatial class 之物件
dsn='data/mapdata201911261001', # 目前工作目錄下(或路徑)圖資目錄
use_iconv = TRUE, # 依據encoding參數給予內碼轉碼
encoding='UTF-8'  # 轉為UTF-8 內碼
)
####### 繪製台北市界地圖解法一###################
library(tibble)
library(geojsonio)  # 載入處理GeoJSON資料套件
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
print(geojson.sp@data[c('COUNTYSN','COUNTYNAME')]) # 列印縣市代碼對照
sp.taipei <- geojson.sp[  # 過濾geojson.sp(SpatialPolygonsDataFrame 物件) 的臺北市資料
geojson.sp@data$COUNTYNAME  %in% c('台北市'),
]
library(broom) # 載入轉換tibble(data.frame 的擴充物件)資料套件
twn.map <- tidy( # 將sp物件轉換為data.frame物件
sp.taipei,  # 資料對象
region = "COUNTYSN" # 群(group)欄位的依據
)
library(ggplot2) # 載入繪圖套件
g <- ggplot(  # 使用繪圖函式產生繪圖物件
data=twn.map,  # 符合data.frame格式的繪圖資料
mapping=aes(   # 指定data 的欄位
x = long,  # x軸為經度
y = lat    # y軸為緯度
)) +
labs(title='台北市縣界地圖(解方一)')+
geom_path(show.legend=FALSE)  # 繪出座標路徑線
print(g) # 印出台北縣市界地圖
####### 繪製台北市界地圖解法二###################
library(rgdal) # 載入rgdal套件讀取shp地圖資料
twn.shp <- rgdal::readOGR( # 回傳Spatial class 之物件
dsn='data/mapdata201911261001', # 目前工作目錄下(或路徑)圖資目錄
use_iconv = TRUE, # 依據encoding參數給予內碼轉碼
encoding='UTF-8'  # 轉為UTF-8 內碼
)
source("~/Desktop/Work/R-Project/R/2_1_v01.R", echo=TRUE)
source("~/Desktop/Work/R-Project/R/2_1_v01.R", echo=TRUE)
library(tibble)
####### 繪製台北市界地圖解法一###################
library(tibble)
library(geojsonio)  # 載入處理GeoJSON資料套件
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
####### 繪製台北市界地圖解法一###################
library(tibble)
library(geojsonio)  # 載入處理GeoJSON資料套件
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
####### 繪製台北市界地圖解法一###################
library(tibble)
library(geojsonio)  # 載入處理GeoJSON資料套件
geojson.sp <- geojson_read( # 將下載之縣市GeoJSON圖資讀入變數
x= 'https://raw.githubusercontent.com/g0v/twgeojson/master/json/twCounty2010.geo.json',
what = "sp" # 指定回傳Spatial class 之物件
)
n = 10000
sample_mean<-rep(NA,n)
t1<-rnorm(20,mean=5.3,sd=9)
plot(t1,type="l",ylim=c(-15,15))
plot(function(x)dnorm(x,mean=5.3,sd=9),-40,60)
plot(function(x)dpois(x,lambda = 1),0,10)
sampler<-function(m){rnorm(m,mean=5.3,sd=5)}
sampler<-function(m){rpois(m,lambda=1)}
t1<-sample(200)
plot(t1,type="l")
for(i in 1:n){
sample_mean[i]<-mean(sampler(400))
}
head(sample_mean)
hist(sample_mean,breaks=1000)
mean(sample_mean)
sd(sample_mean)
sum(sample_mean<=1.1/length(sample_mean))
mean(sample_mean<=1.1)
a=sample_mean<=1.1
mean(a)
b=(sample_mean[a])
mean(b)
x<-seq(0,20,by=0.1)
y<-df(x,df1=3,df2=5)
plot(x,y,type="l")
y2<-pf(x,df1=3,df2=5)
plot(x,y2,type="l")
x<-seq(0.1,by=0.01)
y3<-qf(x,df1=3,df2=5)
plot(x,y3,type="l")
y4<-rf(100,df1=3,df2=5)
plot(y4,type="l")
hist(sample_mean,breaks=1000)
setwd("/Users/lintzujeng/Documents/GitHub/R_Project/Mycode")
library(tidyverse)
library(stringr)
library(data.table)
library(maptools)
library(knitr)
library(kableExtra)
library(janitor)
cases1.all <- read.csv("dataset.csv", header = T)
cases2.all <- read.csv("dataset2.csv", header = T)
for (i in 1:nrow(cases1.all)) {
cases1.all$發病週別[i] = ceiling(cases1.all$發病週別[i] / 4.416667)
}
names(cases1.all)[3] = "發病月份"
cases2.all$發病月份 = as.numeric(cases2.all$發病月份)
cases.all <- rbind(cases1.all, cases2.all)
cases.all <- cases.all[-1]
cases.all <- filter(cases.all, 發病年份 >= 2016)
cases.all$性別 = as.factor(cases.all$性別)
cases.all$是否為境外移入 = as.factor(cases.all$是否為境外移入)
cases.all$年齡層 = as.factor(cases.all$年齡層)
cases.all.ka <- kable(cases.all)
cases.all
table.countary = data.frame(table(cases.all$縣市))
names(table.countary)[1] <- "name.zh"
names(table.countary)[2] <- "confirmed"
tw.shp <- readShapeSpatial("twmap/gadm41_TWN_2.shp")
tw.shp.old <- readShapeSpatial("twmap/gadm36_TWN_2.shp")
tw.map.old <- fortify(tw.shp.old)
tw.map <- fortify(tw.shp)
plot.tw.map <- ggplot(tw.map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
print(as.character(tw.shp$NAME_2))
chinese.name <- c("金門縣", "連江縣", "新竹市", "高雄市",
"新北市", "臺中市", "臺南市", "臺北市",
"桃園市", "彰化縣", "嘉義市", "嘉義縣",
"新竹縣", "花蓮縣", "基隆市", "苗栗縣",
"南投縣", "澎湖縣", "屏東縣", "臺東縣",
"宜蘭縣", "雲林縣")
plot.tw.map
own.df <- data.frame(name.en = tw.shp$NAME_2, name.zh = as.character(tw.shp$NL_NAME_2), id = 0:21)
own.df[5,2] <- "台中市"
own.df[6,2] <- "台南市"
own.df[2,2] <- "連江縣"
own.df$name.zh <- as.factor(own.df$name.zh)
merged.df <- full_join(own.df, table.countary, by = "name.zh")
View(own.df)
print(as.character(tw.shp$NAME_2))
tw.shp@data[["NAME_2"]]
tw.shp@data[["NL_NAME_2"]]
final.plot <- merge(tw.map, merged.df, by='id', all.x=T)
head(final.plot)
library(RColorBrewer)
library(mapproj)
View(cases.all)
install.packages("showtext")
library(showtext)
fc-list
library(RColorBrewer)
library(mapproj)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "WawaSC-Regular"))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "WawaSC-Regular", size = 12))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
warning()
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
#theme(text = element_text(family = "WawaSC-Regular", size = 12))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
par(family="STKaiti")
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
par(family="STKaiti")
par(family="WawaSC-Regular.otf")
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
par(family="WawaSC")
library(RColorBrewer)
library(mapproj)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
par(family="STKaitiTC")
library(tidyverse)
source("~/Documents/GitHub/R_Project/Mycode/mapsetting.R", echo=TRUE)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "Heiti TC Light"))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "STKaitiTC"))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣縣市確診人口分佈圖", x ="經度", y = "緯度")
twcmap
View(cases.all)
source("~/Documents/GitHub/R_Project/Mycode/app.R", echo=TRUE)
source("~/Documents/GitHub/R_Project/Mycode/mapsetting.R", echo=TRUE)
View(cases.all)
View(gene.flu)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣縣市流感重症病發症人口分佈圖(2003~2022)", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感重症病發症人口分佈圖(2003~2022)", x ="經度", y = "緯度")
twcmap
setwd("/Users/lintzujeng/Documents/GitHub/R_Project/Mycode")
par(family="STKaitiTC")
library(tidyverse)
library(stringr)
library(data.table)
library(maptools)
library(knitr)
library(kableExtra)
library(janitor)
gene.2016 <- read.csv("2016_geneSequencing.csv", header = T)
gene.2017 <- read.csv("2017_geneSequencing.csv", header = T)
gene.all <- rbind(gene.2016, gene.2017)
gene.flu <- filter(gene.all, 病毒總類 == "Influenza")
gene.flu <- gene.flu %>%
separate(發病日期, c("year", "month", "day"), "/")
for (i in 8:10) {
gene.flu[,i] <- as.numeric(gene.flu[,i])
}
View(gene.flu)
table.countary = data.frame(table(gene.flu$縣市))
table.countary
names(table.countary)[1] <- "name.zh"
names(table.countary)[2] <- "confirmed"
names(table.countary)[1] <- "name.zh"
table.countary
tw.shp <- readShapeSpatial("twmap/gadm41_TWN_2.shp")
tw.shp.old <- readShapeSpatial("twmap/gadm36_TWN_2.shp")
tw.map.old <- fortify(tw.shp.old)
tw.map <- fortify(tw.shp)
plot.tw.map <- ggplot(tw.map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
plot.tw.map
own.df <- data.frame(name.en = tw.shp$NAME_2, name.zh = as.character(tw.shp$NL_NAME_2), id = 0:21)
own.df[5,2] <- "台中市"
own.df[6,2] <- "台南市"
own.df[2,2] <- "連江縣"
own.df$name.zh <- as.factor(own.df$name.zh)
merged.df <- full_join(own.df, table.countary, by = "name.zh")
final.plot <- merge(tw.map, merged.df, by='id', all.x=T)
head(final.plot)
library(RColorBrewer)
library(mapproj)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感重症病發症人口分佈圖(2003~2022)", x ="經度", y = "緯度")
twcmap
View(final.plot)
View(merged.df)
table.countary
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = ),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感人口分佈圖(2016-2017)", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感人口分佈圖(2016-2017)", x ="經度", y = "緯度")
twcmap
setwd("/Users/lintzujeng/Documents/GitHub/R_Project/Mycode")
par(family="STKaitiTC")
library(tidyverse)
library(stringr)
library(data.table)
library(maptools)
library(knitr)
library(kableExtra)
library(janitor)
cases1.all <- read.csv("dataset.csv", header = T)
cases2.all <- read.csv("dataset2.csv", header = T)
for (i in 1:nrow(cases1.all)) {
cases1.all$發病週別[i] = ceiling(cases1.all$發病週別[i] / 4.416667)
}
names(cases1.all)[3] = "發病月份"
cases2.all$發病月份 = as.numeric(cases2.all$發病月份)
cases.all <- rbind(cases1.all, cases2.all)
cases.all <- cases.all[-1]
cases.all <- filter(cases.all, 發病年份 == 2016 or 發病年份 == 2017)
cases.all <- filter(cases.all, 發病年份 == 2016 || 發病年份 == 2017)
cases.all <- filter(cases.all, 發病年份 == 2016 | 發病年份 == 2017)
View(cases.all)
cases.all <- rbind(cases1.all, cases2.all)
cases.all <- cases.all[-1]
cases.all <- filter(cases.all, 發病年份 == 2016 | 發病年份 == 2017)
cases.all$性別 = as.factor(cases.all$性別)
cases.all$是否為境外移入 = as.factor(cases.all$是否為境外移入)
cases.all$年齡層 = as.factor(cases.all$年齡層)
cases.all.ka <- kable(cases.all)
cases.all
table.countary = data.frame(table(cases.all$縣市))
names(table.countary)[1] <- "name.zh"
names(table.countary)[2] <- "confirmed"
tw.shp <- readShapeSpatial("twmap/gadm41_TWN_2.shp")
tw.shp.old <- readShapeSpatial("twmap/gadm36_TWN_2.shp")
tw.map.old <- fortify(tw.shp.old)
tw.map <- fortify(tw.shp)
own.df <- data.frame(name.en = tw.shp$NAME_2, name.zh = as.character(tw.shp$NL_NAME_2), id = 0:21)
own.df[5,2] <- "台中市"
own.df[6,2] <- "台南市"
own.df[2,2] <- "連江縣"
own.df$name.zh <- as.factor(own.df$name.zh)
merged.df <- full_join(own.df, table.countary, by = "name.zh")
final.plot <- merge(tw.map, merged.df, by='id', all.x=T)
head(final.plot)
library(RColorBrewer)
library(mapproj)
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感重症病發症人口分佈圖(2003~2022)", x ="經度", y = "緯度")
twcmap
twcmap <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = confirmed),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "確診人口")+
theme(text = element_text(family = "PingFang TC Regular"))+
labs(title="台灣流感重症病發症人口分佈圖(2016-2017)", x ="經度", y = "緯度")
twcmap
source("~/Documents/GitHub/R_Project/Mycode/app.R", echo=TRUE)
View(cases.all)
chart.month <- ggplot(data = cases.all, aes(x = 發病月份)) +
geom_histogram(bins = 12, fill = "white", colour = 4) +
theme(text = element_text(family = "PingFang TC Regular")) +
labs(title="台灣流感重症病發症月分佈圖(2003-2022)", x ="月份", y = "確診數") +
scale_x_continuous(breaks=1:12)
chart.month
